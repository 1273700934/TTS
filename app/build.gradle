plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    //签名设置
    signingConfigs {
        release {
            keyAlias 'key'
            keyPassword '1234567890'
            storeFile file('../public.jks')
            storePassword '1234567890'
        }
        debug {
            keyAlias 'key'
            keyPassword '1234567890'
            storeFile file('../public.jks')
            storePassword '1234567890'
        }
    }

    defaultConfig {
        applicationId "me.ag2s.tts"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "0.2"

    }

    buildTypes {
        release {
            minifyEnabled true
            // 启用资源缩减
            shrinkResources true
            // Zipalign优化
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            // 启用资源缩减
            shrinkResources false
            // Zipalign优化
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }



    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    android.applicationVariants.all {
        variant ->
            // 打包完成后复制到的目录
           // def outputFileDir = "${project.projectDir.absolutePath}/${variant.buildType.name}/${variant.flavorName}/${variant.versionName}"
            def today = new Date()
            def path = ((project.name != "app") ? project.name : rootProject.name.replace(" ","")) + "_" +
                    //variant.flavorName + "_" +
                    variant.buildType.name + "_"+
                    "v"+variant.versionName + "_" +
                    today.format('yyyyMMddhhmm') +
                    ".apk"
            variant.outputs.forEach {

                //print(it)
                //println("buildType=" + it)
                it.outputFileName = path
            }
            variant.outputs.all { output ->
                def buildType = variant.buildType.name
                println("buildType=" + buildType)
                if (buildType != "debug") {
                    //apk默认路径
                    String defaultOutputApkPath =
                            variant.getPackageApplicationProvider().get().outputDirectory.getAsFile().get().getPath() +
                                    File.separator

                    println("defaultOutputApkPath=" + defaultOutputApkPath)
                    //获取项目根目录路径
                    def projectRootDir = "$rootDir"
                    println(projectRootDir)
                    //在项目根目录创建apk文件夹
                    def outputFileDir = new File(projectRootDir + File.separator, "release")
                    println("outputFileDir=" + outputFileDir)
                    //设置自定义apk生成路径
                    variant.getPackageApplicationProvider().get().outputDirectory=outputFileDir
                }
            }

    }
}

dependencies {


    implementation "androidx.recyclerview:recyclerview:1.2.0"
    //网络
    implementation 'com.squareup.okio:okio:2.10.0'
    //An HTTP & HTTP/2 client for Android and Java applications.
    //noinspection GradleDependency
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
}